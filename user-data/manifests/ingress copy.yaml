apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blog
  labels:
    ingress-controller: alb
    ingress-group: mgmt
    component: blog
  annotations:
    kubernetes.io/ingress.class: alb
    external-dns.alpha.kubernetes.io/hostname: "test.${stack_name}.${domain_name}"
    external-dns.alpha.kubernetes.io/ttl: '120'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/security-groups: ${aws_security_group.whitelisted.id} ${sg_whitelisted}
    alb.ingress.kubernetes.io/group.name: mgmt
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: "test=true"
    # alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-FS-1-2-Res-2020-10"
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    # cert-manager.io/cluster-issuer: "letsencrypt-staging"
    # alb.ingress.kubernetes.io/scheme: internal
    # alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    # alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    # alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/success-codes: '200-403'
    # alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
    # alb.ingress.kubernetes.io/certificate-arn: ${ng_wildcard_cert}
    # alb.ingress.kubernetes.io/auth-type: cognito
    # alb.ingress.kubernetes.io/auth-on-unauthenticated-request: ${auth_mode}
    # alb.ingress.kubernetes.io/auth-scope: 'email openid'
    # alb.ingress.kubernetes.io/auth-idp-cognito: '{"UserPoolArn": "${user_pool_arn}","UserPoolClientId":"${cognito_appclient_id}","UserPoolDomain":"${stack}-mgmt"}'
spec:
  # tls:
  # - hosts:
  #   - test.dsabun.terratest.io
  #   secretName: test.dsabun.terratest.io
  rules:
    - host: test.dsabun.terratest.io
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              # serviceName: blog
              # servicePort: 80
              service:
                name: blog
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blog2
  namespace: flux-system
  labels:
    ingress-controller: alb
    ingress-group: mgmt
    component: blog2
  annotations:
    kubernetes.io/ingress.class: alb
    external-dns.alpha.kubernetes.io/hostname: "test-dsabun.terratest.io"
    external-dns.alpha.kubernetes.io/ttl: '120'
    alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/scheme: internal
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/security-groups: sg-0d213fcf8936260a9
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/success-codes: '200-403'
    alb.ingress.kubernetes.io/tags: "test2=true"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    alb.ingress.kubernetes.io/group.name: mgmt
spec:
  tls:
  - hosts:
    - test-dsabun.terratest.io
    secretName: test-dsabun.terratest.io
  rules:
    - host: test-dsabun.terratest.io
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              # serviceName: blog
              # servicePort: 80
              service:
                name: blog
                port:
                  number: 80